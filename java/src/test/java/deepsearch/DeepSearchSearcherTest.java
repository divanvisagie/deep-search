/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package deepsearch;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

@DisplayName("DeepSearchSearcher")
public class DeepSearchSearcherTest {

    private DeepSearchSearcher deepSearchSearcher = new DeepSearchSearcher();

    private String jsonString;

    @BeforeEach
    void setUp() throws URISyntaxException, IOException {
        Path path = Paths.get(getClass().getClassLoader().getResource("sample.json").toURI());
        jsonString = new String(Files.readAllBytes(path));
    }

    @Test
    @DisplayName("Test that the file is loaded")
    public void testFileLoaded() {
        assertFalse(jsonString.isEmpty());
    }

    @Test
    @DisplayName("Given sample JSON, sumOf(*) should return 4")
    public void testThatSumWithThisSampleReturns_4() throws JsonMappingException, JsonProcessingException {
        int actual = deepSearchSearcher.sumOf(jsonString);
        
        assertEquals(4, actual);
    }
}
